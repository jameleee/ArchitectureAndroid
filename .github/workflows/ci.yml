# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      name:
        description: 'Testing some thing ...'
        default: 'Mona the Octocat'
        required: true
      home:
        description: 'Location'
        default: 'The Octoverse'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  weekday_job:
    runs-on: ubuntu-latest
    env:
      DAY_OF_WEEK: Mon
    steps:
      - name: Set the value
        id: step_three
        run: |
          echo 'JSON_RESPONSE<<F' >> $GITHUB_ENV
          curl https://httpbin.org/json >> $GITHUB_ENV
          echo 'F' >> $GITHUB_ENV
          echo "ref: $GITHUB_REF"
  say_hello:
    runs-on: ubuntu-latest
    steps:
      - name: Use Value
        if: github.event.inputs.name != ''
        id: step_print
        env: |
          KAPT: ${{ github.event.inputs.name }}
        run: |
          echo "Hello $KAPT!"
          echo "- in ${{ github.event.inputs.home }}!"

  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup runs
        run: ./scripts/entrypoint.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash

      - uses: actions/cache@v2
        with:
          path: path/to/dependencies
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/lockfiles') }}

#      - name: Set up Ruby 2.6
#        uses: actions/setup-ruby@v1
#        with:
#          ruby-version: 2.6.x

#      - name: Cache gem dependencies
#        uses: actions/cache@v1
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gem-${{ hashFiles('**/*Gemfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-gem-
